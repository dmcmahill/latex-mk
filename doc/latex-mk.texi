\input texinfo   @c -*-texinfo-*-
@c $Id: latex-mk.texi,v 1.3 2002/08/21 01:50:08 dan Exp $
@c %**start of header
@setfilename latex-mk.info
@settitle LaTeX-Mk
@setchapternewpage off
@c %**end of header

@include version.texi

@dircategory LaTeX Project Tools
@direntry
* latex-mk: (latex-mk).		Managing LaTeX documents
@end direntry

@copying
This file documents LaTeX-Mk @value{VERSION}

Copyright @copyright{} 2002 Dan McMahill

Permission is granted to make and distribute verbatim copies of
this manual provided the copyright notice and this permission notice
are preserved on all copies.

@ignore
Permission is granted to process this file through TeX and print the
results, provided the printed document carries copying permission
notice identical to this one except for the removal of this paragraph


@end ignore
Permission is granted to copy and distribute modified versions of this
manual under the conditions for verbatim copying, provided that the entire
resulting derived work is distributed under the terms of a permission
notice identical to this one.

Permission is granted to copy and distribute translations of this manual
into another language, under the above conditions for modified versions,
except that this permission notice may be stated in a translation approved
by the author.
@end copying


@titlepage
@title LaTeX-Mk
@subtitle For version @value{VERSION}, @value{UPDATED}
@author Dan McMahill

@page
@vskip 0pt plus 1filll
@insertcopying
Copyright @copyright{} 2002 Dan McMahill
@end titlepage

@c Define an index of targets.
@defcodeindex tr
@c Define an index of variables.
@c @defcodeindex vn


@ifnottex
@node Top, Introduction, (dir), (dir)
@comment  node-name,  next,  previous,  up
@top LaTeX-Mk
@end ifnottex

This file documents the LaTeX-Mk package.  LaTeX-Mk is 
This edition documents version @value{VERSION}.

@menu
* Introduction::                LaTeX-Mk's purpose
* Examples::                    Some examples
* Target Index::
* Variable Index::
* General Index::
@end menu


@page
@contents

@node Introduction, Examples, Top, Top
@chapter Introduction

Latex-Mk is a tool for automatically generating @file{Makefile.in}s from
files called @file{Makefile.am}.  Each @file{Makefile.am} is basically a
series of @code{make} macro definitions (with rules being thrown in
occasionally).  The generated @file{Makefile.in}s are compliant with the
GNU Makefile standards.

The typical Latex-Mk input file is simply a series of macro definitions.
Each such file is processed to create a @file{Makefile.in}.  There
should generally be one @file{Makefile.am} per directory of a project.


@cindex BUGS, reporting
@cindex Reporting BUGS
@cindex E-mail, bug reports

Mail suggestions and bug reports for Latex-Mk to
@email{bug-latex-mk@@xxx.xxx}.


@node Examples, , Introduction, Top
@chapter General ideas

The following sections cover a few basic ideas that will help you
understand how Latex-Mk works.

@c @vrindex VR_INDEX

@trindex A_TR_INDEX

@defvar clean
@trindex clean
Cleans the current working directory by removing all LaTeX output and
other output files created during processing of the project.  In
addition, emacs @file{~} files are removed.
@end defvar

@defvar dvi
@trindex dvi
Performs all processing required to produce the @file{.dvi} file for the
project.
@end defvar

@defvar pdf
@trindex pdf
Performs all processing required to produce a PDF (Portable Document
Format) file, @file{.pdf} file, for the project.
@end defvar

@defvar print
@trindex print
Sends the processed document to the printer.
@end defvar

@defvar show-var
@trindex show-var
This target is used to help debug users Makefiles as well as the
LaTeX-Mk system.  This target displays the value of the variable whose
name is given by the variable VARNAME.  For example:
@example
  make show-var VARNAME=TEXSRCS
@end example
@end defvar

@defvar view
@trindex view
Previews the @file{.dvi} file.
@end defvar

@defvar viewps
@trindex viewps
Previews the Postscript (@file{.ps}) file.
@end defvar

@defvar BIBTEX
The bibtex executible.  Defaults to @code{bibtex}.
@end defvar

@defvar BIBTEX_ENV
A list of variables to be set in the environment when bibtex
is run.  For example:
@example
BIBTEX_ENV+=	BIBINPUTS=.:/home/usr/bib:
@end example
@end defvar

@defvar BIBTEX_FLAGS
A list of flags to be passed to the BIBTEX executible.
@end defvar

@defvar DVIPS
The executible which produces postscript files from @file{.dvi} files.
Defaults to dvips.
@end defvar

@defvar DVIPS_FLAGS
A list of flags to be passed to the DVIPS executible.
@end defvar

@defvar GV
The executible which previews postscript files. 
Defaults to gv.
@end defvar

@defvar GV_FLAGS
A list of flags to be passed to the GV executible.
@end defvar

@defvar LATEX
The LaTeX executible.
Defaults to latex.
@end defvar

@defvar LATEX_ENV
A list of variables to be set in the environment when LATEX
is run.  For example:
@example
LATEX_ENV+=	TEXINPUTS=.:/home/usr/tex:
@end example
@end defvar

@defvar LATEX_FLAGS
A list of flags to be passed to the LATEX executible.
@end defvar

@defvar LPR
The executible which spools postscript files to a printer.
Defaults to lpr.
@end defvar

@defvar LPR_FLAGS
A list of flags to be passed to the LPR executible.
For example:
@example
LPR_FLAGS=	-Pbeernuts
@end example
@end defvar

@defvar PS2PDF
The executible which produces PDF (@file{.pdf}) files from postscript
(@file{.ps})  files.
Defaults to @code{ps2pdf}.
@end defvar

@defvar PS2PDF_FLAGS
A list of flags to be passed to the PS2PDF executible.
Defaults to @code{-Ppdf -j0}.
@end defvar

@defvar XDVI
The executible which previews @file{.pdf} files. 
Defaults to gv.
@end defvar

@defvar XDVI_FLAGS
A list of flags to be passed to the XDVI executible.
@end defvar

This section documents the variables related to tgif file processing.
Tgif is a nice vector drawing program which works well with LaTeX.

@defvar TGIF
The tgif executible.
Defaults to @code{tgif}.
@end defvar

@defvar TGIF_FLAGS
A list of flags to be passed to the TGIF executible to cause it to print
to an encapsulated postscript, @file{.eps}, file.
@end defvar

@defvar TGIFSRCS
All files listed in this variable are assumed to be tgif @file{.obj}
files.  Listing files in this variable will cause a dependency to be
added to the top level project and will cause these files to be
automatically re-exported to postscript as required.
@end defvar

@defvar TGIFDIRS
A list of directories containing tgif drawings can be listed in this
variable.  All @file{.obj} files found in those directories are assumed
to be tgif @file{.obj} files.  These files will be added to the top
level dependency list and will be
automatically re-exported to postscript as required.
@end defvar

This section documents the variables related to xfig file processing.

@defvar FIG2DEV
The executible which can convert xfig @file{.fig} files to encapsulated
postscript @file{.eps} files.
Defaults to @code{fig2dev}.
@end defvar

@defvar FIG2DEV_FLAGS
A list of flags to be passed to the FIG2DEV executible to cause it to print
to an encapsulated postscript, @file{.eps}, file.
@end defvar

@defvar XFIGSRCS
All files listed in this variable are assumed to be xfig @file{.fig}
files.  Listing files in this variable will cause a dependency to be
added to the top level project and will cause these files to be
automatically re-exported to postscript as required.
@end defvar

@defvar XFIGDIRS
A list of directories containing xfig drawings can be listed in this
variable.  All @file{.fig} files found in those directories are assumed
to be xfig @file{.fig} files.  These files will be added to the top
level dependency list and will be
automatically re-exported to postscript as required.
@end defvar

This section documents variables which can be set in project Makefiles
to accomodate other dependencies which may be added.

@defvar OTHER
Files listed in this variable will be added to the dependency list for
the @file{.dvi} file.  For example if you want to add all @file{.eps}
and @file{.epsi}
files in a particular directory to the dependency list, then using BSD
make, you could add:
@example
OTHER_EPS!=     ls eps/*.eps*
OTHER+=         ${OTHER_EPS}
@end example
If you are using GNU make, you would use
@example
OTHER_EPS=      $(wildcard eps/*.eps*)
OTHER+=         ${OTHER_EPS}
@end example
@end defvar

@defvar CLEAN_FILES
Files listed in this variable will be removed when the @code{clean}
target is made.
@end defvar



@page
@node Target Index, Variable Index, Top, Top
@unnumbered Target Index

@printindex tr


@page
@node Variable Index, General Index, Target Index, Top
@unnumbered Variable Index

@printindex vr


@page
@node General Index,  , Variable Index, Top
@unnumbered General Index

@printindex tr


@bye
