# -*- makefile -*-
# Copyright (c) 2002-2023 Dan McMahill
# All rights reserved.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; version 2 of the License.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA

ECHO?=		@ECHO@

#
# This Makefile fragment is included at the very end of users custom
# Makefiles in subdirectories of a top level latex-mk Makefile.  This
# makes sure the standard set of targets exist so a recursive make
# will not fail due to undefined targets

# An example is:
#
# SUBDIR+=	document1
# SUBDIR+=	document2
# SUBDIR+=	document3
BMK:# .include "/path/to/latex.subdir.mk"
GMK:# include /path/to/latex.subdir.gmk
#


# note:  we put "default" first because when we do not specify a target
# we want to use "default" because thats what latex.mk has for its own
# default
_ALL_TARGETS= default all clean dist distclean dvi html pdf print print-all \
	ps rtf show-var view viewall viewpdf viewps

BMK:.for __target in ${_ALL_TARGETS}
BMK:.if !target(${__target})
BMK:.PHONY: ${__target}
BMK:${__target}: _SUBDIRUSE
BMK:.endif
BMK:.endfor
BMK:
BMK:#       
BMK:#       Derived from NetBSD Id: bsd.pkg.subdir.mk,v 1.60 2005/11/14 04:44:25 rillig Exp
BMK:#       Which in turn says:
BMK:#       Derived from: FreeBSD Id: bsd.port.subdir.mk,v 1.19 1997/03/09 23:10:56 wosch Exp
BMK:#       from: @(#)bsd.subdir.mk 5.9 (Berkeley) 2/1/91

BMK:.if !target(_SUBDIRUSE)
BMK:_SUBDIRUSE: .USE
BMK:	@for entry in "" ${SUBDIR} ; do \
BMK:		if [ "$$entry" != "" ] ; then \
BMK:			OK=""; \
BMK:			if [ -d ${.CURDIR}/$${entry} ]; then \
BMK:				edir=$${entry}; \
BMK:			else \
BMK:				OK="false"; \
BMK:				${ECHO} "===> ${_THISDIR_}$${entry} non-existent"; \
BMK:			fi; \
BMK:			if [ "$$OK" = "" ]; then \
BMK:				cd ${.CURDIR}/$${edir}; \
BMK:				${ECHO} "===> ${_THISDIR_}$${edir}"; \
BMK:				${MAKE} ${MAKEFLAGS} "_THISDIR_=${_THISDIR_}$${edir}/" \
BMK:			   	 ${.TARGET} || true; \
BMK:			fi; \
BMK:		fi ; \
BMK:	done
BMK:.endif


GMK:define _SUBDIRUSE_TEMPLATE
GMK:.PHONY: $(1)
GMK:$(1):
GMK:	@for entry in "" ${SUBDIR} ; do \
GMK:		if [ "$$$$entry" != "" ] ; then \
GMK:			OK=""; \
GMK:			if [ -d $$$${entry} ]; then \
GMK:				edir=$$$${entry}; \
GMK:			else \
GMK:				OK="false"; \
GMK:				${ECHO} "===> ${_THISDIR_}$$$${entry} non-existent"; \
GMK:			fi; \
GMK:			if [ "$$$$OK" = "" ]; then \
GMK:				(cd $$$${edir}; \
GMK:				${ECHO} "===> ${_THISDIR_}$$$${edir}"; \
GMK:				${MAKE} ${MAKEFLAGS:%=-%} "_THISDIR_=${_THISDIR_}$$$${edir}/" \
GMK:			   		$(1) || true;) \
GMK:			fi; \
GMK:		fi ; \
GMK:	done
GMK:endef
GMK:$(foreach __tmp__,$(_ALL_TARGETS),$(eval $(call _SUBDIRUSE_TEMPLATE,$(__tmp__))))






